spring.application.name=currency-exchange-service-v2
server.port=8000
spring.config.import=optional:configserver:http://localhost:8888
spring.mvc.log-request-details=true
logging.level.org.springframework=debug
logging.file.name=D:/OneDrive/Study/Java/Logs/MicroservicesV2.log

# DB Configurations 
spring.jpa.show-sql=true
spring.datasource.url=jdbc:h2:mem:testdb
spring.h2.console.enabled=true

# The below two security credentials for DB are optional. Note : Do not use this with the insert query.
#spring.datasource.username=su
#spring.datasource.password=password

# From Spring 2.4 onwards, data insertion intpo a table( even if it yet to be created) is the first step. hence to avoid problems ( as we are creatign the table also ) , we will need to defer the insertion
spring.jpa.defer-datasource-initialization=true

# uri of Eureka Naming Server . This is optional and usually addign the eureka client dependency in pom.xml is sufficient
eureka.client.service-url.default-zone=http://localhost:8761/eureka

# Circuit Breaker Resilience configuration  -> Retry for 5 times
# resilience4j.retry.instances.sample-api.max-attempts=5  
# Optional Circuit Breaker Resilience configuration  -> Retry interval is 1 second
# resilience4j.retry.instances.sample-api.wait-duration=1s  
# Optional Circuit Breaker Resilience configuration  -> Exponential Backoff ; Each subesequent request will wait a little longer 
# resilience4j.retry.instances.sample-api.enable-exponential-backoff=true 

# Refer: https://resilience4j.readme.io/docs/circuitbreaker for more configuration options 
# Configure failure percentage
# resilience4j.circuitbreaker.instances.sample-api.failure-rate-threshold=90 

# Allow only 2 requests per 10 seconds
# resilience4j.ratelimiter.instances.sample-api.limit-refresh-period=10s
# resilience4j.ratelimiter.instances.sample-api.limit-for-period=2

# Allow only 10 concurrent calls 
# resilience4j.bulkhead.instances.sample-api.max-concurrent-calls=10




# Other optional DB/H2 configurations for older spring boot versions
#spring.datasource.driverClassName=org.h2.Driver
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.datasource.data=classpath:/data.sql
#spring.datasource.initialization-mode=always




